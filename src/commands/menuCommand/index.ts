import { sendGenericErrorMessage } from '@/menu'
import { MyContext } from '../../interfaces'
import { mainMenu } from '../../menu/mainMenu'
import { getReferalsCount } from '@/core/supabase/getReferalsCount'
import { isDev } from '@/config'

export async function menuCommand(ctx: MyContext) {
  console.log('CASE: menuCommand')
  const isRu = ctx.from?.language_code === 'ru'
  try {
    console.log('CASE: menu')
    const telegram_id = ctx.from?.id?.toString() || ''
    const inviteCount = await getReferalsCount(telegram_id)

    const menu = await mainMenu(isRu, inviteCount)
    const message = isRu
      ? 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª üëá'
      : 'üè† Main menu\nChoose the section üëá'
    await ctx.reply(message, menu)
    const url = `https://neuro-blogger-web-u14194.vm.elestio.app/neuro_sage/1/1/1/1/1/${
      inviteCount + 1
    }`
    console.log('url', url)

    if (inviteCount <= 10) {
      await ctx.reply(
        isRu
          ? `üöÄ –ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∞–≤–∞—Ç–∞—Ä–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º –Ω–µ–π—Ä–æ —Ñ—É–Ω–∫—Ü–∏—è–º, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π! üåü\n\nüÜî –£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞: ${inviteCount} \n\nü§ñ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /menu`
          : `üöÄ To unlock the next level of the avatar and gain access to new features, invite friends! üåü\n\nüÜî Level your avatar: ${inviteCount} invitations \n\nü§ñ To start using the bot, click the /menu command`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: isRu ? '–û—Ç–∫—Ä—ã—Ç—å' : 'Open',
                  web_app: {
                    url,
                  },
                },
              ],
            ],
          },
        }
      )
      // await ctx.reply(isRu ? `–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è üëáüèª` : `Invite link üëáüèª`, {
      //   parse_mode: 'HTML',
      // })
      // const botUsername = ctx.botInfo.username
      // const telegram_id = ctx.from?.id?.toString() || ''

      // const linkText = `<a href="https://t.me/${botUsername}?start=${telegram_id}">https://t.me/${botUsername}?start=${telegram_id}</a>`

      // await ctx.reply(linkText, { parse_mode: 'HTML' })
    }
    return
  } catch (error) {
    console.error('Error in menu command:', error)
    await sendGenericErrorMessage(ctx, isRu, error)
    throw error
  }
}
