import { levels } from '@/menu/mainMenu'
import { MyContext } from '@/interfaces'
import { isRussian } from '@/helpers/language'

export const handleMenu = async (ctx: MyContext, text: string) => {
  console.log('CASE:handleMenu', text)
  const isRu = isRussian(ctx)

  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
  const actions = {
    [isRu ? levels[0].title_ru : levels[0].title_en]: async () => {
      console.log('CASE: üíµ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏')
      ctx.session.mode = 'subscribe'
      await ctx.scene.enter('subscriptionScene')
    },
    [isRu ? levels[1].title_ru : levels[1].title_en]: async () => {
      console.log('CASE: ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ')
      ctx.session.mode = 'digital_avatar_body'
      await ctx.scene.enter('digitalAvatarBodyWizard')
    },
    [isRu ? levels[2].title_ru : levels[2].title_en]: async () => {
      console.log('CASE: üì∏ –ù–µ–π—Ä–æ—Ñ–æ—Ç–æ')
      ctx.session.mode = 'neuro_photo'
      await ctx.scene.enter('neuroPhotoWizard')
    },
    [isRu ? levels[3].title_ru : levels[3].title_en]: async () => {
      console.log('CASE: üîç –ü—Ä–æ–º–ø—Ç –∏–∑ —Ñ–æ—Ç–æ')
      ctx.session.mode = 'image_to_prompt'
      await ctx.scene.enter('promptFromPhotoWizard')
    },
    [isRu ? levels[4].title_ru : levels[4].title_en]: async () => {
      console.log('CASE: üß† –ú–æ–∑–≥ –∞–≤–∞—Ç–∞—Ä–∞')
      ctx.session.mode = 'avatar'
      await ctx.scene.enter('avatarWizard')
    },
    [isRu ? levels[5].title_ru : levels[5].title_en]: async () => {
      console.log('CASE: üí≠ –ß–∞—Ç —Å –∞–≤–∞—Ç–∞—Ä–æ–º')
      ctx.session.mode = 'chat_with_avatar'
      await ctx.scene.enter('chatWithAvatarWizard')
    },
    [isRu ? levels[6].title_ru : levels[6].title_en]: async () => {
      console.log('CASE: ü§ñ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –ò–ò')
      ctx.session.mode = 'select_model'
      await ctx.scene.enter('selectModelWizard')
    },
    [isRu ? levels[7].title_ru : levels[7].title_en]: async () => {
      console.log('CASE: üé§ –ì–æ–ª–æ—Å –∞–≤–∞—Ç–∞—Ä–∞')
      ctx.session.mode = 'voice'
      await ctx.scene.enter('voiceAvatarWizard')
    },
    [isRu ? levels[8].title_ru : levels[8].title_en]: async () => {
      console.log('CASE: üéôÔ∏è –¢–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å')
      ctx.session.mode = 'text_to_speech'
      await ctx.scene.enter('textToSpeechWizard')
    },
    [isRu ? levels[9].title_ru : levels[9].title_en]: async () => {
      console.log('CASE: üé• –§–æ—Ç–æ –≤ –≤–∏–¥–µ–æ')
      ctx.session.mode = 'image_to_video'
      await ctx.scene.enter('imageToVideoWizard')
    },
    [isRu ? levels[10].title_ru : levels[10].title_en]: async () => {
      console.log('CASE:  –í–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞')
      ctx.session.mode = 'text_to_video'
      await ctx.scene.enter('textToVideoWizard')
    },
    [isRu ? levels[11].title_ru : levels[11].title_en]: async () => {
      console.log('CASE: üñºÔ∏è –¢–µ–∫—Å—Ç –≤ —Ñ–æ—Ç–æ')
      ctx.session.mode = 'text_to_image'
      await ctx.scene.enter('textToImageWizard')
    },
    [isRu ? levels[99].title_ru : levels[99].title_en]: async () => {
      console.log('CASE: üéÆ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')
      await ctx.scene.enter('step0')
    },
    [isRu ? levels[100].title_ru : levels[100].title_en]: async () => {
      console.log('CASE: üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
      await ctx.scene.enter('paymentScene')
    },
    [isRu ? levels[101].title_ru : levels[101].title_en]: async () => {
      console.log('CASE: ü§ë –ë–∞–ª–∞–Ω—Å')
      await ctx.scene.enter('balanceCommand')
    },
    [isRu ? levels[102].title_ru : levels[102].title_en]: async () => {
      console.log('CASE: üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')
      await ctx.scene.enter('inviteCommand')
    },
    [isRu ? levels[103].title_ru : levels[103].title_en]: async () => {
      console.log('CASE: ‚ùì –ü–æ–º–æ—â—å')
      await ctx.scene.enter('step0')
    },
    [isRu ? levels[104].title_ru : levels[104].title_en]: async () => {
      console.log('CASE: üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
      await ctx.scene.enter('menuScene')
    },
  }

  // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–Ω–∞—á–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
  if (actions[text]) {
    await actions[text]()
  } else {
    console.log('CASE: menuScene.handleMenu.else', text)
    await ctx.scene.enter('menuScene')
  }
}
