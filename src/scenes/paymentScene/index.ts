import { Markup, Scenes } from 'telegraf'
import { MyContext } from '@/interfaces'
import { handleBuyRobokassa } from '@/handlers/handleBuyRobokassa'
import { isRussian } from '@/helpers'

import { handleSelectStars } from '@/handlers/handleSelectStars'

export const paymentScene = new Scenes.BaseScene<MyContext>('paymentScene')

paymentScene.enter(async ctx => {
  const isRu = isRussian(ctx)
  await ctx.reply(
    isRu ? '–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å?' : 'How do you want to pay?',
    Markup.keyboard([
      Markup.button.text(isRu ? '‚≠êÔ∏è –ó–≤–µ–∑–¥–∞–º–∏' : '‚≠êÔ∏è Stars'),
      Markup.button.text(isRu ? 'üí≥ –†—É–±–ª—è–º–∏' : 'üí≥ In rubles'),
      Markup.button.text(isRu ? 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' : 'üè† Main menu'),
    ]).resize()
  )
})

paymentScene.hears(['‚≠êÔ∏è –ó–≤–µ–∑–¥–∞–º–∏', '‚≠êÔ∏è Stars'], async ctx => {
  console.log('CASE: ‚≠êÔ∏è –ó–≤–µ–∑–¥–∞–º–∏', ctx.match)
  const isRu = isRussian(ctx)
  await handleSelectStars({ ctx, isRu })
  await ctx.scene.leave() // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
})

paymentScene.hears(['üí≥ –†—É–±–ª—è–º–∏', 'üí≥ In rubles'], async ctx => {
  console.log('CASE: üí≥ –†—É–±–ª—è–º–∏', ctx.match)
  const isRu = isRussian(ctx)
  await handleBuyRobokassa({ ctx, isRu })
  await ctx.scene.leave() // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
})
